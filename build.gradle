plugins {
    id 'java'
    id 'jacoco'
    id 'checkstyle'
    id 'org.sonarqube' version '3.3'
    id 'maven-publish'
}

group = 'com.svydovets'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
targetCompatibility = '17'

jar {
    archiveBaseName = 'svydovets-bring'
}

ext {
    junitVersion = '5.8.2'
    mockitoVersion = '4.6.1'
    reflections = '0.10.2'
    lombok = '1.18.24'
    commonsLang3 = '3.12.0'
    checkstyle = '10.3.1'
    log4j = '2.18.0'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.reflections:reflections:${reflections}"
    implementation "org.projectlombok:lombok:${lombok}"
    annotationProcessor "org.projectlombok:lombok:${lombok}"
    implementation "org.apache.commons:commons-lang3:${commonsLang3}"
    implementation "org.apache.logging.log4j:log4j-core:${log4j}"
    implementation "org.apache.logging.log4j:log4j-api:${log4j}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
}

checkstyle {
    toolVersion "${checkstyle}"
    configFile(file('config/checkstyle/checkstyle.xml'))
    ignoreFailures = false
    maxWarnings = 0
}

checkstyleMain {
    enabled = gradle.startParameter.taskNames.contains('checkstyleMain')
    source = 'src/main/java'
}

checkstyleTest {
    enabled = gradle.startParameter.taskNames.contains('checkstyleTest')
    source = 'src/test/java'
}

sonarqube {
    properties {
        property "sonar.projectKey", "maingroon_svydovets-bring"
        property "sonar.organization", "maingroon"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

publishing {
    publications {
        javaLibrary(MavenPublication) {
            from project.components.java
            groupId = project.group
        }
    }
    repositories {

        maven {
            name = "GitHubPackages"
            url = project.findProperty("github_packages_registry_url")
            credentials {
                username = System.getenv("GH_CI_USER")
                password = System.getenv("GH_PACKAGES_UPLOAD_TOKEN")
            }
        }
    }
}
